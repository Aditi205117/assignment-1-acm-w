
import java.util.Arrays;

public class NextPermutation {

    // Function to get the next lexicographical permutation
    public static void nextPermutation(int[] arr) {
        int n = arr.length;
        
        // Step 1: Find the largest index 'i' such that arr[i] < arr[i + 1]
        int i = n - 2;
        while (i >= 0 && arr[i] >= arr[i + 1]) {
            i--;
        }

        // Step 2: If no such index 'i' exists, the array is in descending order, so we reverse the entire array
        if (i >= 0) {
            // Step 3: Find the largest index 'j' such that arr[j] > arr[i]
            int j = n - 1;
            while (arr[j] <= arr[i]) {
                j--;
            }

            // Step 4: Swap arr[i] and arr[j]
            swap(arr, i, j);
        }

        // Step 5: Reverse the subarray from i + 1 to the end
        reverse(arr, i + 1, n - 1);
    }

    // Helper function to swap two elements in the array
    private static void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    // Helper function to reverse the subarray from start to end
    private static void reverse(int[] arr, int start, int end) {
        while (start < end) {
            swap(arr, start, end);
            start++;
            end--;
        }
    }

    // Main method to test the function
    public static void main(String[] args) {
        
        
        int[] arr1 = {0,1,2};
        System.out.println("Original array: " + Arrays.toString(arr1));
        nextPermutation(arr1);
        System.out.println("Next permutation: " + Arrays.toString(arr1));  

        
        int[] arr2 = {3, 2, 1};
        System.out.println("Original array: " + Arrays.toString(arr2));
        nextPermutation(arr2);
        System.out.println("Next permutation: " + Arrays.toString(arr2));  

        
        int[] arr3 = {1, 1, 5};
        System.out.println("Original array: " + Arrays.toString(arr3));
        nextPermutation(arr3);
        System.out.println("Next permutation: " + Arrays.toString(arr3));  

        
        int[] arr4 = {1, 5, 8, 4, 7, 6, 5, 3, 1};
        System.out.println("Original array: " + Arrays.toString(arr4));
        nextPermutation(arr4);
        System.out.println("Next permutation: " + Arrays.toString(arr4)); 
    }
}

