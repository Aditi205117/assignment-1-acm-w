Q2
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class PascalTriangle {

    // Method to calculate the element at position (r, c) using an iterative approach
    public static int getElement(int r, int c) {
        // Base case: the first and last elements in a row are always 1
        if (c == 0 || c == r) {
            return 1;
        }

        // Initialize the value for the element at position (r, c)
        int result = 1;
        for (int i = 1; i <= c; i++) {
            result = result * (r - i + 1) / i;
        }
        return result;
    }

    // Method to get the nth row of Pascal's triangle
    public static List<Integer> getRow(int n) {
        List<Integer> row = new ArrayList<>();
        int value = 1;
        for (int i = 0; i <= n; i++) {
            row.add(value);
            value = value * (n - i) / (i + 1);
        }
        return row;
    }

    // Method to generate the first n rows of Pascal's triangle
    public static List<List<Integer>> generateTriangle(int n) {
        List<List<Integer>> triangle = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            List<Integer> row = new ArrayList<>();
            int value = 1;
            for (int j = 0; j <= i; j++) {
                row.add(value);
                value = value * (i - j) / (j + 1);
            }
            triangle.add(row);
        }
        return triangle;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Menu for the user to choose a variation
        System.out.println("Choose an option:");
        System.out.println("1. Get element at (r, c)");
        System.out.println("2. Get n-th row of Pascal's triangle");
        System.out.println("3. Generate first n rows of Pascal's triangle");

        // Validate user input for menu choice
        int choice = scanner.nextInt();
        
        if (choice == 1) {
            System.out.print("Enter row number (r): ");
            int r = scanner.nextInt();
            System.out.print("Enter column number (c): ");
            int c = scanner.nextInt();
            if (r >= 0 && c >= 0 && c <= r) {
                System.out.println("Element at (" + r + ", " + c + "): " + getElement(r, c));
            } else {
                System.out.println("Invalid row or column number.");
            }
        } else if (choice == 2) {
            System.out.print("Enter row number (n): ");
            int n = scanner.nextInt();
            if (n >= 0) {
                List<Integer> row = getRow(n);
                System.out.println("Row " + n + ": " + row);
            } else {
                System.out.println("Invalid row number.");
            }
        } else if (choice == 3) {
            System.out.print("Enter number of rows (n): ");
            int rows = scanner.nextInt();
            if (rows > 0) {
                List<List<Integer>> triangle = generateTriangle(rows);
                System.out.println("First " + rows + " rows of Pascal's triangle:");
                for (List<Integer> line : triangle) {
                    System.out.println(line);
                }
            } else {
                System.out.println("Invalid number of rows.");
            }
        } else {
            System.out.println("Invalid choice. Please select 1, 2, or 3.");
        }

        scanner.close();
    }
}
